######################## 全局配置 ##############################
global
        log 127.0.0.1  local0 warning
        # 日志输出配置，所有日志都记录在本机，以local0的日志级别（系统不可用）输出
        # local0～local7
        # emerg 0-系统不可用      alert 1-必须马上采取行动的事件
        # crit 2-关键的事件       err 3-错误事件
        # warning 4-警告事件      notice 5-普通但重要的事件
        # info 6-有用的信息       debug 7-调试信息
 
        nbthread 4                         # 开启的haproxy线程数，开启多线程提高并发处理能力。(可选 调优)
        chroot /usr/local/etc/haproxy      # 工作目录
        # stats timeout 30s                # 超时时间
        user root                          # 默认用户
        group root                         # 默认用户组
        daemon                             # 创建一个守护进程

        # Default SSL material locations
        ca-base /etc/ssl/certs
        crt-base /etc/ssl/private

        # Default ciphers to use on SSL-enabled listening sockets.
        # For more information, see ciphers(1SSL). This list is from:
        #  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
        ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS
        ssl-default-bind-options no-sslv3
############################# 默认配置 ###########################
defaults
        log     global
        mode    http            # 默认的模式   tcp|http|health  可选，tcp是4层，http是7层，health至返回OK
        option  httplog         # http日志模式
        option  dontlognull     # 启用该项，日志中将不会记录空连接。所谓空连接就是在上游的负载均衡器
                                # 或者监控系统为了探测该 服务是否存活可用时，需要定期的连接或者获取某
                                # 一固定的组件或页面，或者探测扫描端口是否在监听或开放等动作被称为空连接；
                                # 官方文档中标注，如果该服务上游没有其他的负载均衡器的话，建议不要使用
                                # 该参数，因为互联网上的恶意扫描或其他动作就不会被记录下来
         option redispatch      # 当serverId对应的服务器挂掉后，强制定向到其他健康的服务器
         retries 2              # 2次连接失败就认为是服务器不可用，也可以通过后面设置
         timeout connect 5s     # 连接超时时间
         timeout client  30s    # server端响应超时           30秒
         timeout server  30s    # 连接server端超时           30秒
         timeout check   10s    # 对后端服务器的检测超时时间 10秒
         maxconn 4096           # 最大连接数

######################## 监控界面配置 #############################
listen http_front
        log     global
        bind 0.0.0.0:1080                # 监听端口  
        mode http
        stats refresh 30s                   # 统计页面自动刷新时间  
        stats uri /haproxy/status           # 统计页面url  
        #stats realm Haproxy Manager        # 统计页面密码框上提示文本  
        
        stats realm Global\ statistics      # 统计报告格式
        stats auth admin:123456             # 统计页面用户名和密码设置  
        stats hide-version                  # 隐藏统计页面上HAProxy的版本信息
        stats admin if TRUE                 #管理界面，成功登陆后可通过webui管理节点

#################### RabbitMQ管理页面配置 ########################
listen rabbitmq_admin
    log     global
    bind 0.0.0.0:15677
    server node1 172.20.0.11:15672
    server node2 172.20.0.12:15672
    server node3 172.20.0.13:15672

################# RabbitMQ镜像集群负载均衡 #######################
listen rabbitmq_cluster
    log 127.0.0.1 local1 debug
    bind 0.0.0.0:5677
    option tcplog
    mode tcp
    option   tcp-check            # 这个必须要加，否则健康检查会失败，因为当前使用的是TCP协议，它表示使用TCP协议做检查，而不是使用HTTP或health协议
    option   clitcpka
    timeout client  3h            # server端响应超时           3小时
    timeout server  3h            # 连接server端超时           3小时
    balance roundrobin     
    # 8种负载均衡方式
    # balance roundrobin          # 轮询，软负载均衡基本都具备这种算法
    # balance static-rr           # 根据权重，建议使用
    # balance leastconn           # 最少连接者先处理，建议使用
    # balance source              # 根据请求源IP，建议使用
    # balance uri                 # 根据请求的URI
    # balance url_param，         # 根据请求的URl参数'balance url_param' requires an URL parameter name
    # balance hdr(name)           # 根据HTTP请求头来锁定每一次HTTP请求
    # balance rdp-cookie(name)    # 根据据cookie(name)来锁定并哈希每一次TCP请求

    server   node1 172.20.0.11:5672 check inter 5s rise 2 fall 3   #check inter 2000 是检测心跳频率，rise 2是2次正确认为服务器可用，fall 3是3次失败认为服务器不可用
    server   node2 172.20.0.12:5672 check inter 5s rise 2 fall 3
    server   node3 172.20.0.13:5672 check inter 5s rise 2 fall 3

